<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

      
       <context:component-scan base-package="com.global.biz"></context:component-scan>
       
       <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
     
     
     
     <!--   <bean id="log" class="com.global.biz.common.LogAdvice"></bean>
       <bean id="before" class="com.global.biz.common.BeforeAdvice"></bean>
       <bean id="afterReturning" class="com.global.biz.common.AfterReturningAdvice"></bean>
       <bean id="afterThrowing" class="com.global.biz.common.AfterThrowingAdvice"></bean>
       <bean id="after" class="com.global.biz.common.AfterAdvice"></bean>
       <bean id="around" class="com.global.biz.common.AroundAdvice"></bean> -->
              <!-- 
        <aop:config>
 
        <aop:pointcut expression="execution(* com.global.biz..*Impl.get*(..))" id="getPointcut"/>
         -->
        <!-- 
        <aop:aspect ref="afterReturning">
           <aop:after-returning method="afterLog" 
           pointcut-ref="getPointcut" returning="returnObj"/>
        
        </aop:aspect>
         -->
        
        
       <!--     <aop:pointcut expression="execution(* com.global.biz..*Impl.*(..))" id="allPointcut"/> -->
       <!--  
           <aop:aspect ref="before">
             <aop:before pointcut-ref="allPointcut" method="beforeLog"/>
           </aop:aspect>
         -->
        
          <!-- <aop:pointcut expression="execution(* com.global.biz..*Impl.get*(..))" id="getPointcut"/> -->
      <!--   
            <aop:aspect ref="around">
               <aop:around pointcut-ref="allPointcut" method="aroundLog"/>           
           </aop:aspect>
          -->
            <!-- 
            <aop:aspect ref="afterThrowing">
                <aop:after-throwing  pointcut-ref="allPointcut" 
                method="exceptionLog" throwing="exceptObj"/>
           </aop:aspect>
            -->
        <!-- 
           <aop:aspect ref="after">
               <aop:after pointcut-ref="allPointcut" method="finallyLog"/>           
           </aop:aspect> -->
        
        
          <!--   <aop:aspect ref="log">
                <aop:after  pointcut-ref="getPointcut" method="printLog"/>
           </aop:aspect> -->
     <!--    </aop:config> -->
     
     
       <!--  <aop:aspect ref="log">
                <aop:before  pointcut-ref="getPointcut" method="printLog"/>
           </aop:aspect> -->
     
     
    <!--  <bean id="log" class="com.global.biz.common.Log4jAdvice"></bean>
     
        <aop:config>
        
          <aop:pointcut expression="execution(* com.global.biz..*Impl.*(..))" id="allPointcut"/>
        
           <aop:aspect ref="log">
                <aop:before  pointcut-ref="allPointcut" method="printLogging"/>
           </aop:aspect>
        </aop:config> -->
     
     <context:property-placeholder location="classpath:config/database.properties" />
       <!--  DataSource 설정 -->
       <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
       <property name="driverClassName" value="${jdbc.driver}" />
          <property name="url" value="${jdbc.url}" />
          <property name="username" value="${jdbc.username}" />
          <property name="password" value="${jdbc.password}" />
       </bean>
       
       <!-- Spring jdbc 설정 빈  -->
       <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
          <property name="dataSource" ref="dataSource"></property>
       </bean>
       
       <!-- Transaction 설정 -->
       <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
          <property name="dataSource" ref="dataSource"></property>
       </bean>
       
       
       <tx:advice id="txAdvice" transaction-manager="txManager">
              <tx:attributes>
                      <tx:method name="get*" read-only="true"/>
                       <tx:method name="*"/>
              </tx:attributes>
       </tx:advice>
       
         <aop:config>
        
          <aop:pointcut expression="execution(* com.global.biz..*Impl.*(..))" id="txPointcut"/>
        
           <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
           
        </aop:config>
       
       
       
       
         <!--  <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
          <property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl" />
          <property name="username" value="scott" />
          <property name="password" value="tiger" /> -->
       
       
</beans>
